services:
  postgres:
    image: postgis/postgis:17-3.5
    platform: linux/amd64
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      TZ: ${LOCATION_NAME}
      LANG: "ja_JP.UTF-8"
      LANGUAGE: "ja_JP:ja"
      LC_ALL: "ja_JP.UTF-8"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "./db/postgres/data:/var/lib/postgresql/data"
      - "./docker/postgres/init:/docker-entrypoint-initdb.d"
    ports:
      - "5432:${DB_PORT}"
  api:
    container_name: api
    environment:
      TZ: Asia/Tokyo
    build:
      context: .
      dockerfile: "./docker/api/Dockerfile"
    volumes:
      - ./:/go/src/app
      - ../egp_protobuf:/go/src/egp_protobuf
    ports:
      - "50051:${API_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
  nginx:
    image: nginx:1.28
    platform: linux/amd64
    container_name: nginx
    ports:
      - "8080:${WEB_PORT}"
    volumes:
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    links:
      - "api"
  pgadmin4:
    image: dpage/pgadmin4:8.4
    ports:
      - "8888:80"
    volumes:
      - ./db/pgadmin:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: egp@example.com
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASS}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    depends_on:
      postgres:
        condition: service_healthy
